[tool.poetry]
name = "dagster-composable-graphs"
version = "0.1.0"
description = "Library to create Dagster jobs from YAML"
authors = ["Francisco Garcia Florez <francisco@truevoid.dev>"]
readme = "README.md"
packages = [{ include = "dagster_composable_graphs" }]

[tool.poetry.dependencies]
dagster = "^1.7.4"
pydantic = ">=2.7.1"
python = ">=3.11,<3.13"
pyyaml = "^6.0.1"
jsonpointer = "^3.0.0"

[tool.poetry.group.dev.dependencies]
docformatter = "^1.7.5"
ipython = "^8.24.0"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.3"
pytest-mock = "^3.14.0"
ruff = "^0.4.2"
pylint = "^3.2.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["dagster_composable_graphs"]
exclude = ["build"]

[tool.ruff]
fix = true
unsafe-fixes = true
show-fixes = true
extend-include = ["*.ipynb"]
line-length = 101
indent-width = 4

[tool.ruff.lint]
select = [
  "B",   # flake8-bugbear
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # Pyflakes
  "I",   # import sort/remove
  "PL",  # pylint
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "SIM", # flake8-simplify
]
extend-fixable = ["B"]

# Ignore certain rules
ignore = ["D100", "D104", "D202"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 79

[tool.docformatter]
recursive = true
wrap-summaries = 79
wrap-descriptions = 79
close-quotes-on-newline = true

[tool.pytest.ini_options]
console_output_style = "progress"
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb --cov --cov=dagster-composable-graphs --cov-context=test --cov-report html --cov-report term --cov-report xml --junitxml=report.xml"
